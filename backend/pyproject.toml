[project]
name = "backend"
version = "0.1.0"
description = "Backend boilerplate for python-web-fullstack"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "alembic>=1.15.1",
    "asyncpg>=0.30.0",
    "fastapi[standard]>=0.115.11",
    "passlib[bcrypt]>=1.7.4",
    "sqlalchemy>=2.0.38",
    "uv>=0.6.5",
]

[dependency-groups]
dev = [
    "aiosqlite>=0.21.0",
    "mypy>=1.15.0",
    "ruff>=0.9.10",
]


[tool.mypy]
strict = true
files = ["app/**/*.py"]

show_error_contex = true
show_error_codes = true
pretty = true
ignore_missing_imports = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true

[tool.ruff]
include = ["app/**/*.py"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

line-length = 88
indent-width = 4

[tool.ruff.lint]
select = [
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming 
    "UP", # pyupgrade
]

ignore = [
    "B008",  # do not perform function calls in argument defaults
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

exclude = [
    "alembic/**/*.py"
]

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]

#use double quotes for strings.
quote-style = "double"

#indent with spaces, rather than tabs.
indent-style = "space"

line-ending = "auto"

[tool.ruff.lint.isort]
#if multiple import * as *, combine in one line
combine-as-imports = true
