[project]
name = "backend"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "aiosqlite>=0.21.0",
    "fastapi[standard]>=0.115.8",
    "sqlalchemy>=2.0.38",
]


[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "ruff>=0.9.6",
]


[tool.mypy]
files = ["app/**/*.py"]
exclude = ["app/**/__init__.py"]
strict = true
warn_unreachable = true
show_error_context = true
pretty = true


[tool.ruff]
include = ["app/**/*.py"]
line-length = 128


[tool.ruff.lint]
select = [
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "D",  # pydocstyle docstrings
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "N",  # pep8-naming 
    "UP", # pyupgrade
]
ignore = [
    "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107", # ignore docstrings obrigatority
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
    "D202",  # ignore first line empty before docstrings
    "D213",  # ignore format of multiple line docstrings
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.ruff.lint.isort]
#if multiple import * as *, combine in one line
combine-as-imports = true

[tool.ruff.pydocstyle]
convention = "google"